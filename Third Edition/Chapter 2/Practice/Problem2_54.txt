-----------------------------------------------------------------------------------------
Assume variables x, f, and d are of type int, float, and double, respectively. Their
values are arbitrary, except that neither f nor d equals +INFINITY, -INFINITY, or NaN.

For each of the following C expressions, either argue that it will always be true
(i.e. evaluate to 1) or give a value for the variables such that it is not true
(i.e. evaluates to 0).


A) x == (int)(double) x
   Casting x to double will preserve the exact numerical value b/c double has a greater
   range and precision. Casting it back to int will round the number to 0, but since
   double preserves the number, it will return x.

B) x == (int)(float) x
   Casting x 

C) d == (double)(float) d
   Any number larger than 1.8 * 10^38 may overflow to +INFINITY since the float range
   is smaller.

D) f == (float)(double) f


E) f == -(-f)

F) 1.0 / 2 == 1/2.0

G) d * d >= 0.0

H) (f + d) - f == d


-----------------------------------------------------------------------------------------
