Write C expressions that evaluate to 1 when the following conditions are true,
and to 0 when they are false. Assume x is of type int.

Assumming that the position of the most significant bit is fixed (bit 31 starting from bit 0(least sig. bit))

A) Any bit of x equals 1.
   (!(value | 0))

B) Any bit of x equals 0.
   (!(value & 0xFFFFFFFF))


C) Any bit in the least signigicant byte of x equals 1.
   (value & 01)



D) Any bit in the most signigicant byte of x equals 0.
   !(value & (1 << 31))



Your code should follow the bit-level integer coding rules (page 120), with the
additional restriction that you may not use equality (==) or inequality(!=)
tests.
